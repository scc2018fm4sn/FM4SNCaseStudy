global au.edu.swin.ict.road.composite.regulation.routing.RoutingActions actions;
import au.edu.swin.ict.road.composite.rules.events.composite.RoleServiceMessage
import au.edu.swin.ict.road.common.StateRecord
import au.edu.swin.ict.road.common.Weight;
import au.edu.swin.ict.road.common.VSN;
import au.edu.swin.ict.road.common.ProcessManagementState;

rule "classify"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="received")
  then
   actions.Classify($msg);
end

rule "admissionCheckV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","80,200",$msg);
   update($msg);
end
rule "admissionCheckV2"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","157,200",$msg);
   update($msg);
end
rule "admissionCheckV3"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","123,200",$msg);
   update($msg);
end
rule "processSelectionV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admitted")
  then
   actions.WeightedRoundRobin("requestAssist","AnyTrucksP1:1,AnyTrucksP2:2",$msg);
   update($msg);
end
rule "drop"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="droppable")
  then
   actions.Drop($msg);
end
rule "createVsnInstance"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="instantiable")
  then
   actions.CreateVSNInstance($msg);
end
rule "requestAssistV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("SC-MM.assist.Req","ComplainReq.xsl",$msg);
end
rule "requestAssistV2"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
   actions.Forward("MM-TC1.pickUp.Req","PickUpReq.xsl",$msg);
end
rule "requestAssistV3"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
   actions.Forward("MM-GC1.orderRepair.Req","OrderRepairFromGC1ByMM.xsl",$msg);
end
rule "requestAssistV4"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
   actions.Forward("MM-GC2.orderRepair.Req","OrderRepairReqFromGC2ByMM..xsl",$msg);
end