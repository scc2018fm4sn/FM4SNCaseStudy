global au.edu.swin.ict.road.composite.regulation.routing.RoutingActions actions;
import au.edu.swin.ict.road.composite.rules.events.composite.RoleServiceMessage
import au.edu.swin.ict.road.common.StateRecord
import au.edu.swin.ict.road.common.Weight;
import au.edu.swin.ict.road.common.VSN;
import au.edu.swin.ict.road.common.ProcessManagementState;

rule "classify"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="received")
  then
   actions.Classify($msg);
end

rule "admissionCheckV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","50,200",$msg);
   update($msg);
end
rule "admissionCheckV2"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","70,200",$msg);
   update($msg);
end
rule "admissionCheckV3"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admittable")
  then
   actions.FixedThroughput("requestAssist","30,200",$msg);
   update($msg);
end
rule "processSelectionV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="admitted")
  then
   actions.WeightedRoundRobin("requestAssist","SunCampsitesP1:2,SunCampsitesP2:5",$msg);
   update($msg);
end
rule "drop"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="droppable")
  then
   actions.Drop($msg);
end
rule "createVsnInstance"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="instantiable")
  then
   actions.CreateVSNInstance($msg);
end
rule "requestAssistV1"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-SC.assist.Req","ComplainReq.xsl",$msg);
end
rule "requestAssistV2"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-EP1.sendEquipmentRequirements.Req","SendEquipmentRequirementsEP1Req.xsl",$msg);
end
rule "requestAssistV3"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-EP2.sendEquipmentRequirements.Req","SendEquipmentRequirementsEP2Req.xsl",$msg);
end
rule "requestAssistV4"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-TC.sendTourRequirements.Req","SendTourRequirementsReq.xsl",$msg);
end
rule "requestAssistV5"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-TX.sendLocation.Req","SendLocationTXReq.xsl",$msg);
end
rule "requestAssistV6"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-DC.sendLocation.Req","SendLocationDCReq.xsl",$msg);
end
rule "requestAssistV7"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-GR.sendGroceryList.Req","SendGroceryList.xsl",$msg);
end
rule "requestAssistV8"
  when
   $msg : RoleServiceMessage(operationName== "requestAssist", state=="forwardable")
  then
  actions.Forward("CM-VR.sendVehicleRequirements.Req","SendVehicleRequirements.xsl",$msg);
end